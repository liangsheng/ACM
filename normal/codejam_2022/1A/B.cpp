#include <bits/stdc++.h>
using namespace std;
typedef long long LL;

const LL INF = 1000000000;

int main() {
    // ios::sync_with_stdio(false);
    // cin.tie(0);
    // vector<LL> ans;
    // for (LL i = 0, d = 1; d <= INF; i++, d *= 2) {
    //     cout << "i= " << i << " d= " << d << '\n';
    //     ans.push_back(d);
    // }
    // for (LL i = 30, d = INF; i < 100; i++, d--) ans.push_back(d);
    // sort(ans.begin(), ans.end());
    // for (int i = 0; i < 100; i++) cout << ans[i] << ", ";
    vector<LL> a = {1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 999999931, 999999932, 999999933, 999999934, 999999935, 999999936, 999999937, 999999938, 999999939, 999999940, 999999941, 999999942, 999999943, 999999944, 999999945, 999999946, 999999947, 999999948, 999999949, 999999950, 999999951, 999999952, 999999953, 999999954, 999999955, 999999956, 999999957, 999999958, 999999959, 999999960, 999999961, 999999962, 999999963, 999999964, 999999965, 999999966, 999999967, 999999968, 999999969, 999999970, 999999971, 999999972, 999999973, 999999974, 999999975, 999999976, 999999977, 999999978, 999999979, 999999980, 999999981, 999999982, 999999983, 999999984, 999999985, 999999986, 999999987, 999999988, 999999989, 999999990, 999999991, 999999992, 999999993, 999999994, 999999995, 999999996, 999999997, 999999998, 999999999, 1000000000};
    LL T, n, x;
    cin >> T;
    while (T--) {
        cin >> n;
        vector<LL> ans;
        for (int i = 0; i < n - 1; i++) {
            cout << a[i] << ' ';
            ans.push_back(a[i]);
        }
        cout << a[n - 1] << '\n';
        ans.push_back(a[n - 1]);
        for (int i = 0; i < n; i++) {
            cin >> x;
            ans.push_back(x);
        }
        sort(ans.begin(), ans.end());
        LL sum = accumulate(ans.begin(), ans.end(), 0LL), mid = sum / 2;
        // cout << "mid= " << mid << '\n';
        vector<LL> res;
        for (int i = 2 * n - 1; i >= 0; i--) {
            if (ans[i] <= mid) res.push_back(ans[i]), mid -= ans[i];
        }
        for (int i = 0; i < res.size() - 1; i++) cout << res[i] << ' ';
        cout << res[res.size() - 1] << '\n';
    }
    return 0;
}